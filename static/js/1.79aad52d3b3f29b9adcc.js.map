{"version":3,"sources":["webpack:///./src/assets/img/4.jpg","webpack:///./src/assets/img/1.jpg","webpack:///src/components/mybanner/index.vue","webpack:///./src/components/mybanner/index.vue?f073","webpack:///./src/components/mybanner/index.vue","webpack:///./src/components/mynotive/index.vue?3191","webpack:///./src/components/mynotive/index.vue","webpack:///src/components/nav/index.vue","webpack:///./src/components/nav/index.vue?82d3","webpack:///./src/components/nav/index.vue","webpack:///src/pages/home/index.vue","webpack:///./src/pages/home/index.vue?2123","webpack:///./src/pages/home/index.vue","webpack:///./src/assets/img/2.jpg","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/Swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/assets/img/3.jpg"],"names":["module","exports","__webpack_require__","p","mybanner","mounted","swiper_esm_bundle","autoplay","grabCursor","direction","loop","components_mybanner","render","_h","this","$createElement","_c","_self","staticClass","attrs","to","name","params","id","src","alt","_v","staticRenderFns","src_components_mybanner","normalizeComponent","ssrContext","components_mynotive","behavior","bgcolor","src_components_mynotive","mynotive_normalizeComponent","nav","data","navdata","getNav","methods","_this","axios_default","a","get","then","res","watcH","newVal","console","log","components_nav","_vm","_l","item","index","key","navid","canshu","icon","_s","text","src_components_nav","nav_normalizeComponent","home","components","myhead","mynotive","Nav","pages_home","flag","home_Component","home_normalizeComponent","__webpack_exports__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","use","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause"],"mappings":"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","file":"static/js/1.79aad52d3b3f29b9adcc.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/4.06e4bd9.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/4.jpg\n// module id = CtaL\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/1.d9c6f56.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/1.jpg\n// module id = Erzt\n// module chunks = 1","<template>\r\n  <div class=\"banner\">\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\">\r\n          <router-link :to=\"{name:'bannerdetail',params:{id:'riverside'}}\"><img src=\"@/assets/img/1.jpg\" alt=\"\"></router-link>\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          <router-link :to=\"{name:'bannerdetail',params:{id:'centurysquare'}}\"><img src=\"@/assets/img/2.jpg\" alt=\"\"></router-link>\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          <router-link :to=\"{name:'bannerdetail',params:{id:'lotuspond'}}\"><img src=\"@/assets/img/3.jpg\" alt=\"\"></router-link>\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          <router-link :to=\"{name:'bannerdetail',params:{id:'fengshan'}}\"><img src=\"@/assets/img/4.jpg\" alt=\"\"></router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Swiper from 'Swiper'\r\n  export default {\r\n    mounted(){\r\n      var mySwiper = new Swiper('.swiper-container', {\r\n        autoplay: true,//可选选项，自动滑动\r\n        grabCursor:true,\r\n        direction:'horizontal',\r\n        loop:true\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.banner{\r\n  width:100%;\r\n  height:100%;\r\n  box-sizing: content-box;\r\n}\r\n.banner .swiper-container{\r\n  width: 100%;\r\n}\r\n.banner .swiper-wrapper{\r\n  width:600%;\r\n  display: flex;\r\n}\r\n.banner .swiper-wrapper .swiper-slide{\r\n  width:100%;\r\n  height:20rem;\r\n}\r\n.banner img{\r\n  width:100%;\r\n  height:100%;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/mybanner/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"banner\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide\"},[_c('router-link',{attrs:{\"to\":{name:'bannerdetail',params:{id:'riverside'}}}},[_c('img',{attrs:{\"src\":require(\"@/assets/img/1.jpg\"),\"alt\":\"\"}})])],1),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('router-link',{attrs:{\"to\":{name:'bannerdetail',params:{id:'centurysquare'}}}},[_c('img',{attrs:{\"src\":require(\"@/assets/img/2.jpg\"),\"alt\":\"\"}})])],1),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('router-link',{attrs:{\"to\":{name:'bannerdetail',params:{id:'lotuspond'}}}},[_c('img',{attrs:{\"src\":require(\"@/assets/img/3.jpg\"),\"alt\":\"\"}})])],1),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('router-link',{attrs:{\"to\":{name:'bannerdetail',params:{id:'fengshan'}}}},[_c('img',{attrs:{\"src\":require(\"@/assets/img/4.jpg\"),\"alt\":\"\"}})])],1)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0e4988f8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/mybanner/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0e4988f8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0e4988f8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0e4988f8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/mybanner/index.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"notive\"},[_c('marquee',{attrs:{\"behavior\":\"scroll\",\"direction\":\"left\",\"bgcolor\":\"#f00\"}},[_vm._v(\"\\n      欢迎来到我的网站，这是我非常美丽的家乡，希望大家喜欢\\n  \")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-75872bef\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/mynotive/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-75872bef\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-75872bef\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-75872bef\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/mynotive/index.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"nav\">\r\n    <a v-for=\"(item,index) in this.navdata\" :key=\"index\">\r\n      <router-link :to=\"{name:'navdetail',params:{navid:item.canshu}}\">\r\n        <img :src=\"item.icon\" alt=\"\">\r\n        <span>{{item.text}}</span>\r\n      </router-link>\r\n    </a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios';\r\n  import mock from '@/mock'\r\n  export default {\r\n    data(){\r\n      return {\r\n        navdata:''\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getNav()\r\n    },\r\n    methods:{\r\n      getNav(){\r\n        axios.get('/api/getnav').then(res=>{\r\n          this.navdata = res.data;\r\n        })\r\n      }\r\n    },\r\n    watcH:{\r\n      getNav(newVal){\r\n        console.log(newVal)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.nav{\r\n  margin-top: 1rem;\r\n  display:flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n}\r\n.nav a{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n}\r\n.nav a img{\r\n  width: 5rem;\r\n  height:5rem;\r\n}\r\n.nav a span{\r\n  font-size:1.4rem;\r\n  padding-top:.5rem;\r\n  color:rgb(245, 9, 213);\r\n  font-weight: bold;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/nav/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"nav\"},_vm._l((this.navdata),function(item,index){return _c('a',{key:index},[_c('router-link',{attrs:{\"to\":{name:'navdetail',params:{navid:item.canshu}}}},[_c('img',{attrs:{\"src\":item.icon,\"alt\":\"\"}}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(item.text))])])],1)}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-62b27b7c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/nav/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-62b27b7c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-62b27b7c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-62b27b7c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/nav/index.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <myhead flag=\"home\"/>\r\n    <mynotive/>\r\n    <mybanner/>\r\n    <Nav/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import myhead from '@/components/myhead'\r\n  import mybanner from '@/components/mybanner'\r\n  import mynotive from '@/components/mynotive'\r\n  import Nav from '@/components/nav'\r\n  export default {\r\n    components:{\r\n      myhead,\r\n      mybanner,\r\n      mynotive,\r\n      Nav\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/home/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('myhead',{attrs:{\"flag\":\"home\"}}),_vm._v(\" \"),_c('mynotive'),_vm._v(\" \"),_c('mybanner'),_vm._v(\" \"),_c('Nav')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-92c38f9a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-92c38f9a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-92c38f9a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-92c38f9a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/index.vue\n// module id = null\n// module chunks = ","module.exports = __webpack_public_path__ + \"static/img/2.89ed7fe.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/2.jpg\n// module id = Mn6R\n// module chunks = 1","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.4.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 1, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = parseFloat(slideStyles.getPropertyValue('width'))\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = parseFloat(slideStyles.getPropertyValue('height'))\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/Swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","module.exports = __webpack_public_path__ + \"static/img/3.07c5bed.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/3.jpg\n// module id = ihpy\n// module chunks = 1"],"sourceRoot":""}