{"version":3,"sources":["webpack:///./src/assets/img/4.jpg","webpack:///./src/assets/img/1.jpg","webpack:///src/components/myhead/index.vue","webpack:///./src/components/myhead/index.vue?897b","webpack:///./src/components/myhead/index.vue","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.4.2@swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/mybanner/index.vue","webpack:///./src/components/mybanner/index.vue?b1d5","webpack:///./src/components/mybanner/index.vue","webpack:///src/pages/home/index.vue","webpack:///./src/pages/home/index.vue?d270","webpack:///./src/pages/home/index.vue","webpack:///./src/assets/img/2.jpg","webpack:///./src/assets/img/family.jpg","webpack:///./src/assets/img/3.jpg"],"names":["module","exports","__webpack_require__","p","myhead","methods","backHome","this","$router","push","myHomeTown","alert","components_myhead","render","_h","$createElement","_c","_self","staticClass","on","click","_v","attrs","src","alt","staticRenderFns","src_components_myhead","normalizeComponent","ssrContext","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","mybanner","mounted","components_mybanner","_m","home","mybanner_normalizeComponent","pages_home","home_Component","home_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/0.21c271663e15ec869f09.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/4.06e4bd9.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/4.jpg\n// module id = CtaL\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/img/1.d9c6f56.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/1.jpg\n// module id = Erzt\n// module chunks = 0","<template>\r\n  <div class=\"header\" @click=\"backHome\">\r\n    <p class=\"Hometown\" @click='myHomeTown'>离石</p>\r\n    <img src=\"@/assets/img/family.jpg\" alt=\"\">\r\n    <div></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    methods:{\r\n      backHome(){\r\n        this.$router.push('/pages/home')\r\n      },\r\n      myHomeTown(){\r\n        alert('这是我家乡的名字')\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.header{\r\n  width:100%;\r\n  height:4rem;\r\n  border-bottom:.1rem solid #ccc;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color:#fff(116, 69, 245);\r\n  box-sizing: border-box;\r\n  \r\n}\r\n.header>img{\r\n  width:50%;\r\n  height:90%;\r\n}\r\n.Hometown{\r\n  padding-left:.3rem;\r\n  font-size:1.4rem;\r\n  font-weight: bold;\r\n  color:#000;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/myhead/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"header\",on:{\"click\":_vm.backHome}},[_c('p',{staticClass:\"Hometown\",on:{\"click\":_vm.myHomeTown}},[_vm._v(\"离石\")]),_vm._v(\" \"),_c('img',{attrs:{\"src\":require(\"@/assets/img/family.jpg\"),\"alt\":\"\"}}),_vm._v(\" \"),_c('div')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-684a8265\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/myhead/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-684a8265\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-684a8265\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-684a8265\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/myhead/index.vue\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.4.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 1, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = parseFloat(slideStyles.getPropertyValue('width'))\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = parseFloat(slideStyles.getPropertyValue('height'))\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_swiper@4.4.2@swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"banner\">\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\">\r\n          <img src=\"@/assets/img/1.jpg\" alt=\"\">\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          <img src=\"@/assets/img/2.jpg\" alt=\"\">\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          <img src=\"@/assets/img/3.jpg\" alt=\"\">\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          <img src=\"@/assets/img/4.jpg\" alt=\"\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Swiper from 'Swiper'\r\n  export default {\r\n    mounted(){\r\n      var mySwiper = new Swiper('.swiper-container', {\r\n        autoplay: true,//可选选项，自动滑动\r\n        grabCursor:true,\r\n        direction:'horizontal',\r\n        loop:true\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.banner{\r\n  width:100%;\r\n  height:auto;\r\n}\r\n.banner img{\r\n  width:100%;\r\n  height:20rem;\r\n}\r\n.banner .swiper-wrapper{\r\n  width:700%;\r\n  display: flex;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/mybanner/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"banner\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":require(\"@/assets/img/1.jpg\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":require(\"@/assets/img/2.jpg\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":require(\"@/assets/img/3.jpg\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":require(\"@/assets/img/4.jpg\"),\"alt\":\"\"}})])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-04bb4c5c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/mybanner/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-04bb4c5c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04bb4c5c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-04bb4c5c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/mybanner/index.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <myhead/>\r\n    <mybanner/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import myhead from '@/components/myhead'\r\n  import mybanner from '@/components/mybanner'\r\n  export default {\r\n    components:{\r\n      myhead,\r\n      mybanner\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/home/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('myhead'),_vm._v(\" \"),_c('mybanner')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a8101f92\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a8101f92\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a8101f92\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a8101f92\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/index.vue\n// module id = null\n// module chunks = ","module.exports = __webpack_public_path__ + \"static/img/2.89ed7fe.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/2.jpg\n// module id = Mn6R\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/img/family.8d52b30.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/family.jpg\n// module id = SdsW\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/img/3.07c5bed.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/3.jpg\n// module id = ihpy\n// module chunks = 0"],"sourceRoot":""}