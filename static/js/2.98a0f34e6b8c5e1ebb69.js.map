{"version":3,"sources":["webpack:///src/pages/detail/index.vue","webpack:///./src/pages/detail/index.vue?ae8e","webpack:///./src/pages/detail/index.vue","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.4.2@swiper/dist/js/swiper.esm.bundle.js"],"names":["detail","data","detailArr","routerName","components","myhead","mounted","this","init","methods","_this","localStorage","index","$route","params","name","_axios_0_18_0_axios_default","a","get","then","res","_loop","key","navid","_loop2","key1","forEach","item","i","setTimeout","swiper_esm_bundle","direction","loop","autoplay","preventClicksPropagation","grabCursor","pages_detail","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_l","attrs","images","img","src","alt","preview","preview-text","_s","comment","price","member","text","href","phone","_e","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","clearTimeout","Dom7","[object Object]","arr","self","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","param","urlToParse","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","use","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","isUiWebView","test","defaults","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause"],"mappings":"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","file":"static/js/2.98a0f34e6b8c5e1ebb69.js","sourcesContent":["<template>\r\n  <div class=\"list\">\r\n    <myhead/>\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n        \r\n          <div class=\"swiper-slide\" v-for=\"(item,index) in detailArr.img\" :key=\"index\">\r\n            <viewer :images=\"detailArr.img\" class=\"viewer\">\r\n              <img :src=\"item.src\" alt=\"\" preview preview-text=\"图片\" class=\"imgSrc\">\r\n            </viewer>\r\n          </div>\r\n        \r\n      </div>\r\n      <div class=\"swiper-button-prev\"></div>\r\n      <div class=\"swiper-button-next\"></div>\r\n      <div class=\"swiper-pagination\"></div>\r\n    </div>\r\n    <div class=\"connenct\">\r\n      <h3 class=\"name\">{{detailArr.name}}</h3>\r\n      <p  class=\"comment\">介绍:{{detailArr.comment}}</p>\r\n      <span class=\"price\">用户价格:{{detailArr.price}}</span>\r\n      <span class=\"member\">会员价格:{{detailArr.member}}</span>\r\n      <p class=\"text\"><span class=\"pinglun\"></span>{{detailArr.text}}</p>\r\n    </div>\r\n    <div v-if=\"detailArr.phone\" class=\"button\">\r\n      <a :href=\"'tel:'+detailArr.phone\" class=\"phone\">立即预约:{{detailArr.phone}}</a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios'\r\n  import mock from '@/mock'\r\n  import Swiper from 'Swiper'\r\n  import myhead from '@/components/myhead'\r\n  export default {\r\n    data(){\r\n      return {\r\n        detailArr:\"\",\r\n        routerName:''\r\n      }\r\n    },\r\n    components:{\r\n      myhead\r\n    },\r\n    mounted(){\r\n      this.init()\r\n    },\r\n    methods:{\r\n      init(){\r\n        localStorage.index = this.$route.params.index\r\n        localStorage.name = this.$route.params.name\r\n        let index = this.$route.params.index || localStorage.index\r\n        let name = this.$route.params.name || localStorage.name\r\n        let routerName = this.$route.params.routerName || localStorage.routerName\r\n        axios.get('/api/navdetail').then(res=>{\r\n          for(let key in res.data){\r\n            if(key === localStorage.navid){\r\n              for(let key1 in res.data[key]){\r\n                if(key1 === routerName){\r\n                  res.data[key][key1].forEach((item,i) => {\r\n                    if(index == i){\r\n                      this.detailArr = res.data[key][key1][index]\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        setTimeout(()=>{\r\n          var mySwiper = new Swiper ('.swiper-container', {\r\n            direction: 'horizontal', // 垂直切换选项\r\n            loop: true, // 循环模式选项\r\n            autoplay:true,\r\n            preventClicksPropagation:true,\r\n            grabCursor:true\r\n          })  \r\n        },100)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.list{\r\n  width:100%;\r\n  height:100%;\r\n  box-sizing: content-box;\r\n  overflow-y: scroll;\r\n}\r\n.list .swiper-container{\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n.list .swiper-wrapper{\r\n  width:700%;\r\n  display: flex;\r\n}\r\n.list .swiper-wrapper .swiper-slide{\r\n  width:37.5rem;\r\n  height:20rem;\r\n}\r\n.list .swiper-wrapper .swiper-slide .viewer{\r\n  width:100%;\r\n  height:100%;\r\n}\r\n.list img{\r\n  width:100%;\r\n  height:100%;\r\n}\r\n.connenct{\r\n  width: 100%;\r\n  padding:0 1rem;\r\n  box-sizing: border-box;\r\n}\r\n.name{\r\n  font-size:1.8rem;\r\n  padding-top:1rem;\r\n}\r\n.pinglun{\r\n  font-size:1.4rem;\r\n  color:rgb(139, 136, 139);\r\n  display: block;\r\n  padding-bottom: 1rem;\r\n}\r\n.text{\r\n  font-size:1.4rem;\r\n  padding:1rem 0;\r\n  color:rgb(139, 136, 139);\r\n}\r\n.price{\r\n  font-size:1.3rem;\r\n  color:red;\r\n  display: block;\r\n  padding:1rem 0;\r\n}\r\n.member{\r\n  font-size:1.3rem;\r\n  color:blue;\r\n  display: block;\r\n}\r\n.comment{\r\n  font-size:1.5rem;\r\n  color:chocolate;\r\n  font-weight: bold;\r\n  padding:1rem 0;\r\n}\r\n.button{\r\n  width: 100%;\r\n  height: 4rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: skyblue;\r\n}\r\n.phone{\r\n  font-size:1.5rem;\r\n  color:#fff;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/detail/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list\"},[_c('myhead'),_vm._v(\" \"),_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.detailArr.img),function(item,index){return _c('div',{key:index,staticClass:\"swiper-slide\"},[_c('viewer',{staticClass:\"viewer\",attrs:{\"images\":_vm.detailArr.img}},[_c('img',{staticClass:\"imgSrc\",attrs:{\"src\":item.src,\"alt\":\"\",\"preview\":\"\",\"preview-text\":\"图片\"}})])],1)})),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-prev\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"})]),_vm._v(\" \"),_c('div',{staticClass:\"connenct\"},[_c('h3',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.detailArr.name))]),_vm._v(\" \"),_c('p',{staticClass:\"comment\"},[_vm._v(\"介绍:\"+_vm._s(_vm.detailArr.comment))]),_vm._v(\" \"),_c('span',{staticClass:\"price\"},[_vm._v(\"用户价格:\"+_vm._s(_vm.detailArr.price))]),_vm._v(\" \"),_c('span',{staticClass:\"member\"},[_vm._v(\"会员价格:\"+_vm._s(_vm.detailArr.member))]),_vm._v(\" \"),_c('p',{staticClass:\"text\"},[_c('span',{staticClass:\"pinglun\"}),_vm._v(_vm._s(_vm.detailArr.text))])]),_vm._v(\" \"),(_vm.detailArr.phone)?_c('div',{staticClass:\"button\"},[_c('a',{staticClass:\"phone\",attrs:{\"href\":'tel:'+_vm.detailArr.phone}},[_vm._v(\"立即预约:\"+_vm._s(_vm.detailArr.phone))])]):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-ae4eb7be\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/pages/detail/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ae4eb7be\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ae4eb7be\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ae4eb7be\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/detail/index.vue\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.4.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 1, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = parseFloat(slideStyles.getPropertyValue('width'))\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = parseFloat(slideStyles.getPropertyValue('height'))\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_swiper@4.4.2@swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = "],"sourceRoot":""}