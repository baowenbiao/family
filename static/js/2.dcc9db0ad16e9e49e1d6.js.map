{"version":3,"sources":["webpack:///src/pages/wangbadetail/index.vue","webpack:///./src/pages/wangbadetail/index.vue?6dfa","webpack:///./src/pages/wangbadetail/index.vue","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/Swiper/dist/js/swiper.esm.bundle.js"],"names":["wangbadetail","data","wangbaArr","components","myhead","mounted","this","init","methods","_this","localStorage","index","$route","params","name","axios_default","a","get","then","res","setTimeout","swiper_esm_bundle","direction","loop","pagination","paginationType","prevButton","nextButton","pages_wangbadetail","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_l","item","key","attrs","src","alt","_s","comment","price","member","text","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","use","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","isUiWebView","test","defaults","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","current","total","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause"],"mappings":"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","file":"static/js/2.dcc9db0ad16e9e49e1d6.js","sourcesContent":["<template>\r\n  <div class=\"list\">\r\n    <myhead/>\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\" v-for=\"(item,index) in wangbaArr.img\" :key=\"index\">\r\n         <img :src=\"item.src\" alt=\"\" class=\"imgSrc\">\r\n        </div>\r\n      </div>\r\n      <div class=\"swiper-button-prev\"></div>\r\n      <div class=\"swiper-button-next\"></div>\r\n      <div class=\"swiper-pagination\"></div>\r\n    </div>\r\n    <div class=\"connenct\">\r\n      <h3 class=\"name\">{{wangbaArr.name}}</h3>\r\n      <p  class=\"comment\">网吧介绍:{{wangbaArr.comment}}</p>\r\n      <span class=\"price\">用户价格:{{wangbaArr.price}}</span>\r\n      <span class=\"member\">会员价格:{{wangbaArr.member}}</span>\r\n      <p class=\"text\"><span class=\"pinglun\">用户评论:</span>{{wangbaArr.text}}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios'\r\n  import mock from '@/mock'\r\n  import Swiper from 'Swiper'\r\n  import myhead from '@/components/myhead'\r\n  export default {\r\n    data(){\r\n      return {\r\n        wangbaArr:\"\"\r\n      }\r\n    },\r\n    components:{\r\n      myhead\r\n    },\r\n    mounted(){\r\n      this.init()\r\n    },\r\n    methods:{\r\n      init(){\r\n        localStorage.index = this.$route.params.index\r\n        localStorage.name = this.$route.params.name\r\n        let index = this.$route.params.index || localStorage.index\r\n        let name = this.$route.params.name || localStorage.name\r\n        axios.get('/api/wangbadetail').then(res=>{\r\n          if(res.data[index].name == name){\r\n            this.wangbaArr = res.data[index]\r\n          }\r\n        })\r\n        setTimeout(()=>{\r\n          var mySwiper = new Swiper ('.swiper-container', {\r\n            direction: 'horizontal', // 垂直切换选项\r\n            loop: true, // 循环模式选项\r\n            \r\n            // 如果需要分页器\r\n            pagination : '.swiper-pagination',\r\n            paginationType : 'progress',\r\n            \r\n            // 如果需要前进后退按钮\r\n            prevButton:'.swiper-button-prev',\r\n            nextButton:'.swiper-button-next',\r\n          })  \r\n        },100)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.list{\r\n  width:100%;\r\n  height:100%;\r\n  box-sizing: content-box;\r\n}\r\n.list .swiper-container{\r\n  width: 100%;\r\n}\r\n.list .swiper-wrapper{\r\n  width:700%;\r\n  display: flex;\r\n}\r\n.list .swiper-wrapper .swiper-slide{\r\n  width:37.5rem;\r\n  height:20rem;\r\n}\r\n.list img{\r\n  width:100%;\r\n  height:100%;\r\n}\r\n.connenct{\r\n  width: 100%;\r\n  height:100%;\r\n  padding:0 1rem;\r\n  box-sizing: border-box;\r\n}\r\n.name{\r\n  font-size:1.8rem;\r\n  padding-top:1rem;\r\n}\r\n.pinglun{\r\n  font-size:1.4rem;\r\n  color:rgb(139, 136, 139);\r\n  display: block;\r\n  padding-bottom: 1rem;\r\n}\r\n.text{\r\n  font-size:1.4rem;\r\n  padding:1rem 0;\r\n  color:rgb(139, 136, 139);\r\n}\r\n.price{\r\n  font-size:1.3rem;\r\n  color:red;\r\n  display: block;\r\n  padding:1rem 0;\r\n}\r\n.member{\r\n  font-size:1.3rem;\r\n  color:blue;\r\n  display: block;\r\n}\r\n.comment{\r\n  font-size:1.5rem;\r\n  color:chocolate;\r\n  font-weight: bold;\r\n  padding:1rem 0;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/wangbadetail/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list\"},[_c('myhead'),_vm._v(\" \"),_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.wangbaArr.img),function(item,index){return _c('div',{key:index,staticClass:\"swiper-slide\"},[_c('img',{staticClass:\"imgSrc\",attrs:{\"src\":item.src,\"alt\":\"\"}})])})),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-prev\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"})]),_vm._v(\" \"),_c('div',{staticClass:\"connenct\"},[_c('h3',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.wangbaArr.name))]),_vm._v(\" \"),_c('p',{staticClass:\"comment\"},[_vm._v(\"网吧介绍:\"+_vm._s(_vm.wangbaArr.comment))]),_vm._v(\" \"),_c('span',{staticClass:\"price\"},[_vm._v(\"用户价格:\"+_vm._s(_vm.wangbaArr.price))]),_vm._v(\" \"),_c('span',{staticClass:\"member\"},[_vm._v(\"会员价格:\"+_vm._s(_vm.wangbaArr.member))]),_vm._v(\" \"),_c('p',{staticClass:\"text\"},[_c('span',{staticClass:\"pinglun\"},[_vm._v(\"用户评论:\")]),_vm._v(_vm._s(_vm.wangbaArr.text))])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-31bdab33\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/wangbadetail/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-31bdab33\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-31bdab33\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-31bdab33\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/wangbadetail/index.vue\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.4.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 1, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = parseFloat(slideStyles.getPropertyValue('width'))\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = parseFloat(slideStyles.getPropertyValue('height'))\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/Swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = "],"sourceRoot":""}